#!/usr/bin/python3
"""_summary_: parses logs generated by a py script
    format of logs:
<IP Address> - [<date>] "GET /projects/260 HTTP/1.1" <status code> <file size>
    Returns:
        prints count of status codes along with file size
"""
import sys

STATUS = {'200': 0,
          '301': 0,
          '400': 0,
          '401': 0,
          '403': 0,
          '404': 0,
          '405': 0,
          '500': 0}

total_size = 0
n = 0
try:
    for line in sys.stdin:
        data = line.split()
        if len(data) > 2:
            status = data[-2]
            file_size = int(data[-1])
            if status in STATUS:
                STATUS[status] += 1
            total_size += file_size
            n += 1
            if n == 10:
                print("File size: {}".format(total_size))
                # while looking for it as of python 3.7
                # ictionaries preserve ordering
                # i.e no need for sorting
                # STATUS =  dict(sort(STATUS.items(), key=lambda item:item[0]))
                for key, value in STATUS.items():
                    if value != 0:
                        print("{}: {:d}".format(key, value))
                n = 0
except KeyboardInterrupt:
    pass
finally:
    print("File size: {}".format(total_size))
    for key, value in STATUS.items():
        if value != 0:
            print("{}: {}".format(key, value))
